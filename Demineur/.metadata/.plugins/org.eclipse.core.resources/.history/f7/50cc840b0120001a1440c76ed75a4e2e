package demineur.controleur.outils;


import java.text.DecimalFormat;

public class Coordonnees {

	public static final double ABSCISSE_PAR_DEFAUT = 0;
	public static final double ORDONNEE_PAR_DEFAUT = 0;

	private double abscisse;
	private double ordonnee;

	public Coordonnees(double abscisse, double ordonnee) {
		this.setAbscisse(abscisse);
		this.setOrdonnee(ordonnee);
	}

	public Coordonnees() {
		this(ABSCISSE_PAR_DEFAUT, ORDONNEE_PAR_DEFAUT);
	}

	public double getAbscisse() {
		return this.abscisse;
	}

	public double getOrdonnee() {
		return this.ordonnee;
	}

	public void setAbscisse(double abscisse) {
		this.abscisse = abscisse;
	}

	public void setOrdonnee(double ordonnee) {
		this.ordonnee = ordonnee;
	}

	public void deplacerVers(double nouvelleAbscisse, double nouvelleOrdonnee) {
		this.setAbscisse(nouvelleAbscisse);
		this.setOrdonnee(nouvelleOrdonnee);
	}

	public void deplacerDe(double deltaAbscisse, double deltaOrdonnee) {
		this.setAbscisse(this.getAbscisse() + deltaAbscisse);
		this.setOrdonnee(this.getOrdonnee() + deltaOrdonnee);
	}

	public double distanceVers(Coordonnees coord) {
		return Math.sqrt(Math.pow((coord.getAbscisse() - this.getAbscisse()), 2)
				+ Math.pow((coord.getOrdonnee() - this.getOrdonnee()), 2));
	}

	public double angleVers(Coordonnees coord) {
		return Math.atan2(coord.getOrdonnee() - this.getOrdonnee(), coord.getAbscisse() - this.getAbscisse());
	}

	@Override
	public String toString() {
		DecimalFormat df = new DecimalFormat("0.0#");
		return "(" + df.format(this.getAbscisse()) + " , " + df.format(this.getOrdonnee()) + ")";
	}

}